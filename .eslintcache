[{"C:\\Users\\jfost\\ProjectsLocal\\HangmanFullStack\\hangman-client\\src\\index.js":"1","C:\\Users\\jfost\\ProjectsLocal\\HangmanFullStack\\hangman-client\\src\\reportWebVitals.js":"2","C:\\Users\\jfost\\ProjectsLocal\\HangmanFullStack\\hangman-client\\src\\Components\\App.js":"3","C:\\Users\\jfost\\ProjectsLocal\\HangmanFullStack\\hangman-client\\src\\Components\\GameLogic.js":"4"},{"size":511,"mtime":1611783949249,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":2276,"mtime":1611875585270,"results":"8","hashOfConfig":"6"},{"size":1853,"mtime":1611788854561,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"uxdyff",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"C:\\Users\\jfost\\ProjectsLocal\\HangmanFullStack\\hangman-client\\src\\index.js",[],["20","21"],"C:\\Users\\jfost\\ProjectsLocal\\HangmanFullStack\\hangman-client\\src\\reportWebVitals.js",[],"C:\\Users\\jfost\\ProjectsLocal\\HangmanFullStack\\hangman-client\\src\\Components\\App.js",["22","23","24"],"C:\\Users\\jfost\\ProjectsLocal\\HangmanFullStack\\hangman-client\\src\\Components\\GameLogic.js",["25","26","27","28"],"export let numberOfGuesses = 0;\r\nexport let targetWord = '';\r\nexport let secretTargetWord = '';\r\nexport let lettersGuessed = [];\r\nlet wordBank = [\r\n  'hello',\r\n  'world'\r\n]\r\n\r\nexport function startGame(){\r\n  targetWord = wordBank[Math.floor(Math.random() * wordBank.length)];\r\n}\r\n\r\nfunction inputLetterGuess(letter){\r\n  if (!lettersGuessed.includes(letter)) {\r\n    lettersGuessed.push(letter.toLowerCase());\r\n    numberOfGuesses++;\r\n  }\r\n}\r\n\r\nexport function updateSecret(){\r\n  secretTargetWord = targetWord.split('').map(char => (lettersGuessed.includes(char)) ? char : '_').join(' ')\r\n}\r\n\r\nexport function isGameStarted(){\r\n  if (targetWord.length !== 0) return true;\r\n}\r\n\r\nfunction isGameOver(){\r\n  if (numberOfIncorrectGuesses() >= 6) return 'Lost';\r\n  if (!secretTargetWord.includes('_') && secretTargetWord.length) return 'Won';\r\n}\r\n\r\nfunction numberOfIncorrectGuesses(){\r\n  return lettersGuessed.filter((char) => !targetWord.includes(char)).length\r\n}\r\n\r\nfunction lossProgress(){\r\n  return `${Math.round((Math.min(numberOfIncorrectGuesses() / 6, 1)) * 100)}%`;\r\n}\r\n\r\nfunction restart(){\r\n  numberOfGuesses = 0;\r\n  targetWord = '';\r\n  secretTargetWord = '';\r\n  lettersGuessed = [];\r\n  startGame();\r\n  updateSecret();\r\n}\r\n\r\nfunction display(){\r\n  console.log(secretTargetWord)\r\n}\r\n\r\n// function gameLoop(){\r\n//   startGame();\r\n//   updateSecret();\r\n//   while (!isGameOver()){\r\n//     // Print game\r\n//     display();\r\n//     // Get input from user\r\n//     const prompt = require('prompt-sync')();\r\n//     let playerMove = prompt('What letter would you like to guess?');\r\n//     if (playerMove === 'break') break;\r\n\r\n//     inputLetterGuess(playerMove);\r\n//     updateSecret();\r\n//   }\r\n//   display();\r\n//   console.log(isGameOver());\r\n// }\r\n\r\n// gameLoop();\r\n\r\nexport function playGame(letter){\r\n  inputLetterGuess(letter);\r\n  updateSecret();\r\n}\r\n",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":10,"column":10,"nodeType":"35","messageId":"36","endLine":10,"endColumn":15},{"ruleId":"33","severity":1,"message":"37","line":10,"column":17,"nodeType":"35","messageId":"36","endLine":10,"endColumn":25},{"ruleId":"38","severity":1,"message":"39","line":13,"column":3,"nodeType":"35","endLine":13,"endColumn":12,"suggestions":"40"},{"ruleId":"33","severity":1,"message":"41","line":29,"column":10,"nodeType":"35","messageId":"36","endLine":29,"endColumn":20},{"ruleId":"33","severity":1,"message":"42","line":38,"column":10,"nodeType":"35","messageId":"36","endLine":38,"endColumn":22},{"ruleId":"33","severity":1,"message":"43","line":42,"column":10,"nodeType":"35","messageId":"36","endLine":42,"endColumn":17},{"ruleId":"33","severity":1,"message":"44","line":51,"column":10,"nodeType":"35","messageId":"36","endLine":51,"endColumn":17},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'dummy' is assigned a value but never used.","Identifier","unusedVar","'setDummy' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setSecret'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["47"],"'isGameOver' is defined but never used.","'lossProgress' is defined but never used.","'restart' is defined but never used.","'display' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"48","fix":"49"},"Add dependencies array: []",{"range":"50","text":"51"},[724,724],", []"]